@{
    ViewBag.Title = "首页";
    var F = @Html.F();

    FineUIMvc.EmptyProject.Models.UserInfor user = (FineUIMvc.EmptyProject.Models.UserInfor)Session["User"];
}

@section head {

    <link type="text/css" rel="stylesheet" href="~/res/css/index.css" />

}

@section body {

    <div id="header" class="f-widget-header f-mainheader">
        <table>
            <tr>
                <td>
                    @*@(F.Button().OnClientClick("window.open('http://fineui.com/mvc/','_blank');").EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Home).IconAlign(IconAlign.Top).ToolTip("官网首页").ID("btnHomePage").CssClass("icononlyaction"))*@
                    <a class="logo" href="@Url.Content("~/")" title="生产管理系统">
                        生产管理系统
                    </a>
                </td>
                <td style="text-align: right;">

                    @*@(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).IconFont(IconFont._Skin).IconAlign(IconAlign.Top).Text("主题仓库").ID("btnThemeSelect").CssClass("icontopaction themes").Listener("click", "onThemeSelectClick"))*@

                    @(F.Button().EnableDefaultCorner(false).EnableDefaultState(false).Text(user.UserName).CssClass("userpicaction")
                                        .Menu(F.Menu()
                                            .Items(
                                                //F.MenuButton().IconFont(IconFont._User).Text("个人信息").Listener("click", "F.alert('尚未实现');"),
                                                //F.MenuSeparator(),
                                                F.MenuButton().IconFont(IconFont._SignOut).Text("安全退出").OnClick(Url.Content("~/Login/Logout"))
                                            )
                                        )
                    )
                </td>
            </tr>
        </table>
    </div>

    <div id="maincontent">

    </div>

    @if (user.UserName == "super")
    {
        @(F.RegionPanel().ID("RegionPanel1").ShowBorder(false).IsViewPort(true).CssClass("mainpanel")
                        .Regions(
                            F.Region().ID("Region1").ShowBorder(false).ShowHeader(false).RegionPosition(Position.Top).CssClass("topregion bgpanel").Layout(LayoutType.Fit).ContentEl("#header"),
                            F.Region().ID("Region2").RegionSplit(true).RegionSplitWidth(2).RegionSplitIcon(false).Width(200).ShowHeader(false).Title("菜单").EnableCollapse(true).Layout(LayoutType.Fit).RegionPosition(Position.Left).CssClass("leftregion bgpanel")
                                .Items(
                                    F.Tree().ShowBorder(false).ShowHeader(false).ID("treeMenu")
                                        .Nodes(
                                            F.TreeNode().Text("OTD数据调整").NavigateUrl("~/OtdDpmo/Index"),
                                            F.TreeNode().Text("产能完成率调整").NavigateUrl("~/CapComplete/Index"),
                                            F.TreeNode().Text("及时率调整").NavigateUrl("~/TimelyRate/Index")
                                        )
                                ),
                            F.Region().ID("mainRegion").ShowHeader(false).Layout(LayoutType.Fit).RegionPosition(Position.Center).CssClass("centerregion")
                                .Items(
                                    F.TabStrip().ID("mainTabStrip").EnableTabCloseMenu(true).ShowBorder(false).ShowInkBar(true)
                                        .Tabs(
                                            F.Tab().ID("Tab1").Title("首页").BodyPadding(10).Layout(LayoutType.Fit).Icon(Icon.House).ContentEl("#maincontent")
                                        )
                                )
                        )
        )
    }
    else
    {
        @(F.RegionPanel().ID("RegionPanel1").ShowBorder(false).IsViewPort(true).CssClass("mainpanel")
                .Regions(
                    F.Region().ID("Region1").ShowBorder(false).ShowHeader(false).RegionPosition(Position.Top).CssClass("topregion bgpanel").Layout(LayoutType.Fit).ContentEl("#header"),
                    F.Region().ID("Region2").RegionSplit(true).RegionSplitWidth(2).RegionSplitIcon(false).Width(200).ShowHeader(false).Title("菜单").EnableCollapse(true).Layout(LayoutType.Fit).RegionPosition(Position.Left).CssClass("leftregion bgpanel")
                        .Items(
                            F.Tree().ShowBorder(false).ShowHeader(false).ID("treeMenu")
                                .Nodes(
                                    F.TreeNode().Text("销售管理").Expanded(true)
                                        .Nodes(
                                            F.TreeNode().Text("销售数据").NavigateUrl("~/SaleManages/Index"),
                                            F.TreeNode().Text("月销售报表").NavigateUrl("~/SaleManages/SellReport"),
                                            F.TreeNode().Text("月分析报表").NavigateUrl("~/SaleManages/MonthAnalyze")

                                        ),
                                    F.TreeNode().Text("生产管理").Expanded(true)
                                        .Nodes(
                                            F.TreeNode().Text("月生产计划").NavigateUrl("~/ProductManages/Index"),
                                            F.TreeNode().Text("月生产报表").NavigateUrl("~/ProductManages/ProductReport"),
                                            F.TreeNode().Text("月生产工时报表").NavigateUrl("~/ProductManages/ProductionHoursReport"),
                                            F.TreeNode().Text("年度计划录入").NavigateUrl("~/SaleManages/YearPlan"),
                                            F.TreeNode().Text("产品定额").NavigateUrl("~/ProductQua/Index"),
                                            F.TreeNode().Text("经营体能力").NavigateUrl("~/VentureCapa/Index"),
                                            F.TreeNode().Text("产能分析").NavigateUrl("~/ProductManages/Capa"),
                                            F.TreeNode().Text("及时率").NavigateUrl("~/TimelyRate/Check"),
                                            F.TreeNode().Text("产能完成率").NavigateUrl("~/CapComplete/Check")
                                        )
                                )
                        ),
                    F.Region().ID("mainRegion").ShowHeader(false).Layout(LayoutType.Fit).RegionPosition(Position.Center).CssClass("centerregion")
                        .Items(
                            F.TabStrip().ID("mainTabStrip").EnableTabCloseMenu(true).ShowBorder(false).ShowInkBar(true)
                                .Tabs(
                                    F.Tab().ID("Tab1").Title("首页").BodyPadding(10).Layout(LayoutType.Fit).Icon(Icon.House).ContentEl("#maincontent")
                                )
                        )
                )
        )
    }




    @(F.Window().Hidden(true).EnableResize(true).EnableMaximize(true).EnableClose(true).Height(600).Width(1020).IsModal(true).ClearIFrameAfterClose(false).IFrameUrl(Url.Content("~/Home/Themes")).EnableIFrame(true).Title("主题仓库").ID("windowThemeRoller"))
}

@section script {

    <script>

        // 点击主题仓库
        function onThemeSelectClick(event) {
            F.ui.windowThemeRoller.show();
        }

        // 页面控件初始化完毕后，会调用用户自定义的onReady函数
        F.ready(function () {

            if (!F.ui.treeMenu) return;


            // 初始化主框架中的树和选项卡互动，以及地址栏的更新
            // treeMenu： 主框架中的树控件实例，或者内嵌树控件的手风琴控件实例
            // mainTabStrip： 选项卡实例
            // updateHash: 切换Tab时，是否更新地址栏Hash值（默认值：true）
            // refreshWhenExist： 添加选项卡时，如果选项卡已经存在，是否刷新内部IFrame（默认值：false）
            // refreshWhenTabChange: 切换选项卡时，是否刷新内部IFrame（默认值：false）
            // maxTabCount: 最大允许打开的选项卡数量
            // maxTabMessage: 超过最大允许打开选项卡数量时的提示信息
            F.initTreeTabStrip(F.ui.treeMenu, F.ui.mainTabStrip, {
                maxTabCount: 10,
                maxTabMessage: '请先关闭一些选项卡（最多允许打开 10 个）！'
            });

        });
    </script>
}
